#!/bin/sh
## simple script to run Gem from the build

# local configuration
conffile="./devgem.conf"
if [ -e "${conffile}" ]; then . "${conffile}"; fi


## Pd binary can be overriden by setting the PD environment
if [ "x${PD}" = "x" ]; then
  PD="@PD_EXE@"
  if [ "x${PD#@}" != "x${PD}" ]; then
    PD=""
  fi
fi
if [ "x${PD}" = "x" ]; then
 PD=pd
fi

## for running Pd through some external application (e.g. gdb, valgrind, wine,...)
#  set the LAUNCHER variable.
: ${LAUNCHER:-}

## provide replacement for realpath
which realpath >/dev/null 2>&1 || realpath() { [ "x${1#/}" != "x$1" ] && echo "$1" || echo "$PWD/${1#.}"; }

## search abstractions (both static ones and built ones)
srcdir=$(realpath @abs_top_srcdir@)
builddir=$(realpath @abs_top_builddir@)

gempath=

if [ -d "${srcdir}/abstractions" ]; then
  gempath=${srcdir}/abstractions:${gempath}
fi
if [ -d "${builddir}" ]; then
 if [ "x${srcdir}" != "x${builddir}" ]; then
  gempath=${builddir}/abstractions:${gempath}
 fi
  gempath=${builddir}:${gempath}
else
 builddir=${0%/*}
fi

gempath=${gempath%:}

# help paths
helppath=""
if [ -d "${srcdir}/help" ]; then
  helppath="${helppath}:${srcdir}/help"
fi
for d in $(for pd in "${srcdir}/plugins"/*/*.pd "${builddir}/plugins"/*/*.pd; do
	if [ -f "${pd}" ]; then
		echo "${pd%/*}"
	fi
done | uniq); do
  helppath="${helppath}:${d}"
done
helppath=${helppath#:}
helppath=${helppath%:}
if [ -n "${helppath}" ]; then
	gempath="${gempath}:${helppath}"
	gempath="${gempath#:}"
fi

if [ "x${gempath}" = "x" ]; then
  gempath=${builddir}
fi

${LAUNCHER} ${PD} -stderr -nrt -oss -nosound -path "${gempath}" -lib ${builddir}/Gem "$@"
