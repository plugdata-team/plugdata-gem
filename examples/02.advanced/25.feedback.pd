#N canvas 550 258 1097 614 12;
#X declare -lib Gem;
#X text 120 105 <----- 1;
#N canvas 87 154 247 179 Gem.init 0;
#X obj 118 46 loadbang;
#X msg 118 81 reset;
#X obj 118 113 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 27 54 pd Gem.init;
#N canvas 340 107 682 322 gemwin 0;
#X obj 102 122 tgl 15 0 \$0-gemstart \$0-gemstart empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 102 161 r \$0-gemstart;
#X obj 102 182 select 1 0;
#X msg 102 214 create \, 1;
#X msg 177 215 destroy;
#X obj 102 239 t a;
#X obj 318 54 inlet;
#X obj 318 255 gemwin;
#X obj 318 100 t a a;
#X obj 318 287 outlet;
#X obj 350 128 route create destroy;
#X obj 350 150 t b;
#X msg 350 172 1;
#X obj 390 150 t b;
#X msg 390 172 0;
#X obj 350 195 t f;
#X msg 350 219 set \$1;
#X text 118 122 rendering;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 8 1 10 0;
#X connect 10 0 11 0;
#X connect 10 1 13 0;
#X connect 11 0 12 0;
#X connect 12 0 15 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 0 0;
#X coords 0 -1 1 1 85 40 1 100 100;
#X restore 27 82 pd gemwin;
#X obj 28 547 circle;
#X floatatom 69 490 5 0 0 0 - - - 0;
#X floatatom 110 491 5 0 0 0 - - - 0;
#X obj 28 252 t a a;
#X obj 60 355 square 4;
#X obj 60 330 pix_texture;
#X obj 28 225 translateXYZ 0 0 -4;
#X obj 446 300 translateXYZ 0 0 -4;
#X obj 446 514 pix_texture;
#X obj 787 263 gemhead 30;
#X text 862 262 rendering in the Gem window;
#X obj 787 297 pix_texture;
#X obj 787 322 square 4;
#X obj 28 152 gemhead 10;
#X obj 446 191 gemhead 20;
#X obj 27 17 declare -lib Gem;
#N canvas 0 0 450 300 clearZ 0;
#X obj 120 48 loadbang;
#X obj 55 95 GEMglClear;
#X obj 120 72 GLdefine GL_DEPTH_BUFFER_BIT;
#X obj 55 19 inlet;
#X obj 55 141 outlet;
#X obj 182 50 bng 15 250 50 0 empty empty empty 0 -6 0 8 #fcfcfc #000000 #000000;
#X connect 0 0 2 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 0;
#X connect 5 0 2 0;
#X restore 28 410 pd clearZ;
#X obj 28 519 translateXYZ 0 0 0;
#X obj 446 269 alpha;
#X obj 28 180 gemframebuffer \; dimen 400 400;
#X obj 446 219 gemframebuffer \; dimen 400 400;
#X floatatom 526 543 5 0 0 0 - - - 0;
#X obj 446 542 square 4.1;
#X text 168 490 <----- 2;
#X text 105 395 "Clear the Z buffer in order to enforce the render on top of the feedback texture", f 25;
#X text 156 332 feedback texture;
#X text 104 548 render somthing simple;
#X text 460 342 A shader can be inserted here for more complex feedback loop, f 21;
#X text 608 426 change the color of the feedback loop for a simple effect, f 33;
#X text 581 541 <----- 3;
#X text 654 542 zoom effect;
#X obj 446 432 colorRGB 0.9 1 0 0.95;
#X text 109 152 main render in a framebuffer;
#X text 529 191 feedback render;
#X text 309 15 A framebuffer image is persistent \, so you can use it to create feedback in an efficient way.;
#X connect 1 0 2 0;
#X connect 4 0 20 1;
#X connect 5 0 20 2;
#X connect 6 0 19 0;
#X connect 6 1 8 0;
#X connect 8 0 7 0;
#X connect 9 0 6 0;
#X connect 10 0 34 0;
#X connect 11 0 25 0;
#X connect 12 0 14 0;
#X connect 14 0 15 0;
#X connect 16 0 22 0;
#X connect 17 0 23 0;
#X connect 19 0 20 0;
#X connect 20 0 3 0;
#X connect 21 0 10 0;
#X connect 22 0 9 0;
#X connect 22 1 11 1;
#X connect 22 1 14 1;
#X connect 23 0 21 0;
#X connect 23 1 8 1;
#X connect 24 0 25 1;
#X connect 34 0 11 0;
