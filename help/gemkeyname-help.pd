#N canvas 64 61 679 445 10;
#X declare -lib Gem;
#X obj 27 85 cnv 15 450 200 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 27 325 cnv 15 450 100 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 35 332 Inlets:;
#X obj 27 290 cnv 15 450 30 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 36 291 Arguments:;
#X text 472 28 GEM object;
#X text 35 361 Outlets:;
#X text 495 69 Example:;
#X text 74 50 Class: control object;
#X obj 486 84 cnv 15 170 180 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X obj 495 101 cnv 15 150 80 empty empty empty 20 12 0 14 #14e814 #404040 0;
#X text 38 89 Description: output keyboard events in the GEM window;
#X text 37 265 USE AT YOUR OWN RISK !!!;
#X text 82 302 none;
#X text 53 344 Inlet 1: non - used;
#X text 488 274 see also:;
#X text 53 34 Synopsis: [gemkeyname];
#X text 36 108 [gemkeyname] sends out keyboard events which occur in the GEM window. Such event will give a symbolic description of the button. The "state"-outlet will be 1 for KEY_DOWN and 0 for KEY_UP.;
#X text 37 219 Furthermore \, i would like to make this object really cross-platform one day. Thus the KeyName might change on one system or another in future times.;
#X text 37 161 It is not guaranteed \, that Windows / Linux / OSX versions will give the same description for the same key pressed !!! Also \, there is no guarantee \, that the Pd-object [keyname] will return the same symbols as [gemkeyname];
#X text 53 376 Outlet 1: state;
#X text 53 390 Outlet 2: keyName;
#X obj 489 299 gemkeyboard;
#X floatatom 508 160 2 0 0 1 state - - 0;
#X symbolatom 565 134 10 0 0 0 keyName - - 0;
#X obj 508 115 gemkeyname;
#N canvas 484 243 450 300 META 0;
#X obj 10 25 declare -lib Gem;
#X text 10 45 DESCRIPTION output keyboard events in the GEM window;
#X text 10 65 KEYWORDS Gem control;
#X text 20 85 INLET_0 non;
#X text 20 105 OUTLET_0 state;
#X text 20 125 OUTLET_1 keyName;
#X text 10 145 AUTHOR IOhannes m zm√∂lnig;
#X text 10 165 LICENSE GPL v2;
#X restore 558 28 pd META;
#X obj 552 203 _gemwin;
#X connect 25 0 23 0;
#X connect 25 1 24 0;
