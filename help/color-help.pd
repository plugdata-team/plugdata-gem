#N canvas 48 102 639 342 10;
#X declare -lib Gem;
#X text 452 8 GEM object;
#X obj 8 196 cnv 15 430 130 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 39 198 Inlets:;
#X text 63 211 Inlet 1: gemlist;
#X text 39 292 Outlets:;
#X text 57 305 Outlet 1: gemlist;
#X obj 8 146 cnv 15 430 40 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 17 145 Arguments:;
#X obj 8 66 cnv 15 430 70 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 449 66 cnv 15 170 200 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X text 453 49 Example:;
#X text 71 31 Class: manipulation object;
#X obj 450 107 cnv 15 160 60 empty empty empty 20 12 0 14 #14e814 #404040 0;
#X obj 451 73 gemhead;
#X obj 451 182 cube;
#X text 62 156 a list of 3 (RGB) or 4 (RGBA) float-values.;
#X text 60 171 defaults: 0 0 0 1;
#X obj 451 145 color 0 1 0;
#X msg 487 116 0 0 1;
#X text 63 229 Inlet 2: list: 3(RGB) or 4(RGBA) float values;
#X text 22 81 [color] sets the colour of all subsequent shape and vertex operations until reset by another [color]/[colorRGB] object. If you set the alpha-value \, you will need an [alpha] object to enable alpha-blending;
#X text 50 12 Synopsis: [color];
#X text 29 67 Description: colouring;
#X text 449 272 see also:;
#X obj 452 301 colorRGB;
#N canvas 484 243 450 300 META 0;
#X obj 10 25 declare -lib Gem;
#X text 10 45 DESCRIPTION colouring;
#X text 10 65 KEYWORDS Gem openGL transformation;
#X text 20 85 INLET_0 gemlist;
#X text 20 105 INLET_1 list;
#X text 20 125 OUTLET_0 gemlist;
#X text 10 145 AUTHOR IOhannes m zm√∂lnig;
#X text 10 165 LICENSE GPL v2;
#X restore 519 8 pd META;
#X obj 517 213 _gemwin;
#X connect 13 0 17 0;
#X connect 17 0 14 0;
#X connect 18 0 17 1;
