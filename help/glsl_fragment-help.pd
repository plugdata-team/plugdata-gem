#N canvas 90 61 633 413 10;
#X declare -lib Gem;
#X text 452 8 GEM object;
#X obj 8 257 cnv 15 430 140 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 11 258 Inlets:;
#X text 10 348 Outlets:;
#X obj 8 222 cnv 15 430 30 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 17 222 Arguments:;
#X obj 7 66 cnv 15 430 150 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 451 77 cnv 15 170 170 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X text 453 60 Example:;
#X obj 456 108 cnv 15 160 130 empty empty empty 35 12 0 14 #14e814 #404040 0;
#X text 14 361 Outlet 1: gemlist;
#X text 21 272 Inlet 1: gemlist;
#X obj 10 153 cnv 15 420 50 empty empty empty 20 12 0 14 #d8fcfc #404040 0;
#X text 71 31 Class: shader object;
#X text 451 325 see also:;
#X obj 453 362 glsl_vertex;
#X text 14 157 IMPORTANT NOTE: your openGL-implementation (gfx-card driver \, ...) has to support the GLSL-standard (which is part of openGL-2.0) in order to make use of this object.;
#X floatatom 545 216 0 0 0 0 ID - - 0;
#X obj 459 193 glsl_fragment;
#X obj 453 342 glsl_program;
#X text 50 12 Synopsis: [glsl_fragment];
#X text 13 66 Description: load a GLSL fragment shader;
#X text 14 85 [glsl_fragment] loads and compiles a GLSL fragment shader into a module \, suitable for linking with [glsl_program];
#X text 17 118 An ID of the generated module is sent to the 2nd outlet. Use this ID in the "shader" message to [glsl_program];
#X text 63 233 <filename>: filename to load as GLSL fragment shader;
#X text 21 284 Inlet 1: "open <filename>": filename to load as GLSL fragment shader module.;
#X text 21 315 Inlet 1: "print": print info about the GLSL-support in your openGL implementation;
#X text 14 376 Outlet 2: <float>: ID of the GLSL-module;
#X obj 459 86 gemhead;
#X msg 552 170 print;
#X obj 527 117 bng 15 250 50 0 empty empty empty 0 -6 0 8 #fcfcfc #000000 #000000;
#N canvas 0 22 450 300 open 0;
#X obj 312 45 openpanel;
#X obj 311 157 outlet;
#X obj 312 69 t b s;
#X msg 332 94 set open \$1;
#X obj 312 22 inlet;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 2 1 3 0;
#X connect 3 0 1 0;
#X connect 4 0 0 0;
#X restore 470 116 pd open;
#X msg 470 136 open Toon.frag;
#X obj 453 382 glsl_geometry;
#N canvas 484 243 450 300 META 0;
#X obj 10 25 declare -lib Gem;
#X text 10 45 DESCRIPTION load a GLSL fragment shader;
#X text 10 65 KEYWORDS Gem openGL shader;
#X text 20 85 INLET_0 gemlist open print;
#X text 20 105 OUTLET_0 gemlist;
#X text 20 125 OUTLET_1 float;
#X text 10 145 AUTHOR IOhannes m zm√∂lnig;
#X text 10 165 LICENSE GPL v2;
#X restore 518 8 pd META;
#X obj 533 252 _gemwin;
#X connect 18 1 17 0;
#X connect 28 0 18 0;
#X connect 29 0 18 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 32 0 18 0;
