#N canvas 443 230 633 358 10;
#X declare -lib Gem;
#X text 452 8 GEM object;
#X obj 8 245 cnv 15 430 80 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 39 248 Inlets:;
#X text 38 295 Outlets:;
#X obj 8 206 cnv 15 430 30 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 17 205 Arguments:;
#X obj 7 76 cnv 15 430 125 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 449 77 cnv 15 170 270 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X text 453 60 Example:;
#X obj 520 238 cnv 15 90 60 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X obj 450 138 cnv 15 160 50 empty empty empty 20 12 0 14 #14e814 #404040 0;
#X obj 451 84 gemhead;
#X text 71 31 Class: pix object;
#X text 63 216 <none>;
#X text 56 308 Outlet 1: gemlist;
#X text 63 262 Inlet 1: gemlist;
#X obj 451 162 pix_coloralpha;
#X obj 452 285 gemhead 1;
#X obj 452 325 sphere;
#X text 50 12 Synopsis: [pix_coloralpha];
#X text 19 76 Description: calculate the Alpha-channels from the RGB-data;
#X text 28 102 [pix_coloralpha] will set the alpha-channel to be the mean-value of the RGB-triple for each pixel.;
#X text 16 155 This of course \, makes only sense with RGBA-images.;
#X text 63 275 Inlet 1: 1|0 : turn on/off (default:1);
#X obj 467 142 tgl 15 1 empty empty empty 0 -6 0 8 #fcfcfc #000000 #000000 1 1;
#N canvas 484 243 450 300 META 0;
#X obj 10 25 declare -lib Gem;
#X text 10 45 DESCRIPTION calculate the Alpha-channels from the RGB-data;
#X text 10 65 KEYWORDS Gem pix image;
#X text 20 85 INLET_0 gemlist bool;
#X text 20 105 OUTLET_0 gemlist;
#X text 10 125 AUTHOR IOhannes m zm√∂lnig;
#X text 10 145 LICENSE GPL v2;
#X restore 518 8 pd META;
#X obj 522 244 _gemwin;
#X obj 451 113 pix_test;
#X obj 451 196 alpha;
#X obj 451 218 _pix2rectangle 3;
#X obj 452 305 translateXYZ 0 0 -2;
#X floatatom 457 256 5 -4 4 0 - - - 0;
#X connect 11 0 27 0;
#X connect 16 0 28 0;
#X connect 17 0 30 0;
#X connect 24 0 16 0;
#X connect 27 0 16 0;
#X connect 28 0 29 0;
#X connect 30 0 18 0;
#X connect 31 0 30 1;
