#N canvas 404 365 632 342 10;
#X declare -lib Gem;
#X text 442 8 GEM object;
#X obj 8 245 cnv 15 430 80 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 39 252 Inlets:;
#X text 38 285 Outlets:;
#X obj 8 206 cnv 15 430 30 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 17 205 Arguments:;
#X obj 7 76 cnv 15 430 125 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 449 77 cnv 15 170 250 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X text 453 60 Example:;
#X obj 514 254 cnv 15 100 60 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X obj 450 158 cnv 15 160 60 empty empty empty 20 12 0 14 #14e814 #404040 0;
#X obj 451 84 gemhead;
#X text 71 31 Class: pix object;
#X text 63 216 <none>;
#X text 56 298 Outlet 1: gemlist;
#X text 63 266 Inlet 1: gemlist;
#X text 50 12 Synopsis: [pix_2grey];
#X text 29 76 Description: convert a pix to greyscale;
#X text 17 151 So \, if you have an RGBA-image \, after [pix_2grey] the values for R \, G and B will be the same. the chroma-values of a YUV-image will be set to 127 (no chroma);
#X obj 451 176 pix_2grey;
#X text 17 97 Assuming that you have an image in the gemList (for instance \, loaded in with pix_image) \, [pix_2grey] will convert the image into a greyscale \, without changing the actual colorspace.;
#N canvas 484 243 450 300 META 0;
#X obj 10 25 declare -lib Gem;
#X text 10 45 DESCRIPTION convert a pix to greyscale;
#X text 10 65 KEYWORDS Gem pix image;
#X text 20 85 INLET_0 gemlist;
#X text 20 105 OUTLET_0 gemlist;
#X text 10 125 AUTHOR IOhannes m zm√∂lnig;
#X text 10 145 LICENSE GPL v2;
#X restore 518 8 pd META;
#X obj 518 262 _gemwin;
#X obj 451 233 _pix2rectange;
#X obj 451 113 pix_test;
#X connect 11 0 24 0;
#X connect 19 0 23 0;
#X connect 24 0 19 0;
