#N canvas 6 61 634 347 10;
#X declare -lib Gem;
#X text 452 8 GEM object;
#X obj 8 216 cnv 15 430 85 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 39 218 Inlets:;
#X text 39 267 Outlets:;
#X obj 8 176 cnv 15 430 30 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 17 175 Arguments:;
#X obj 8 61 cnv 15 430 110 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 449 77 cnv 15 170 250 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X text 453 60 Example:;
#X obj 514 262 cnv 15 100 60 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X obj 450 146 cnv 15 160 70 empty empty empty 20 12 0 14 #14e814 #404040 0;
#X obj 451 84 gemhead;
#X text 71 31 Class: pix object;
#X text 57 280 Outlet 1: gemlist;
#X text 63 232 Inlet 1: gemlist;
#X text 50 12 Synopsis: [pix_resize];
#X text 29 62 Description: resize an image;
#X text 63 186 <xsize> <ysize>;
#X text 63 245 Inlet 1: dimen <xsize> <ysize>;
#X msg 463 152 dimen 32 9;
#N canvas 484 243 450 300 META 0;
#X obj 10 25 declare -lib Gem;
#X text 10 45 DESCRIPTION resize an image;
#X text 10 65 KEYWORDS Gem pix image;
#X text 20 85 INLET_0 gemlist dimen;
#X text 20 105 OUTLET_0 gemlist;
#X text 10 125 AUTHOR IOhannes m zm√∂lnig;
#X text 10 145 LICENSE GPL v2;
#X restore 519 8 pd META;
#X text 12 79 if you don't specify any dimensions \, the image will be automatically resized to the next power of 2 (eg. 320x240 will be resized to 512x256). You can change the re-size with the "dimen"-message \; a value of "0" defaults to the next power-of-2 of the original image;
#X obj 522 268 _gemwin;
#X obj 451 186 pix_resize;
#X msg 539 180 dimen 0 0;
#X obj 450 113 pix_test 240 320;
#X obj 451 223 pix_texture \; quality 0;
#X obj 451 259 square 3;
#X connect 11 0 25 0;
#X connect 19 0 23 0;
#X connect 23 0 26 0;
#X connect 24 0 23 0;
#X connect 25 0 23 0;
#X connect 26 0 27 0;
