#N canvas 6 124 683 381 10;
#X declare -lib Gem;
#X text 452 8 GEM object;
#X obj 8 196 cnv 15 430 135 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 39 198 Inlets:;
#X text 39 281 Outlets:;
#X obj 8 156 cnv 15 430 30 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 17 155 Arguments:;
#X obj 8 66 cnv 15 430 80 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 449 77 cnv 15 170 280 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X text 453 60 Example:;
#X obj 514 290 cnv 15 100 60 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X obj 451 161 cnv 15 160 100 empty empty empty 20 12 0 14 #14e814 #404040 0;
#X obj 451 119 gemhead;
#X text 71 31 Class: pix object;
#X obj 496 103 bng 15 250 50 0 empty empty pix_load -45 8 0 8 #fcfcfc #000000 #000000;
#N canvas 0 0 587 366 image 0;
#X obj 77 48 inlet;
#X obj 77 344 outlet;
#X obj 77 205 pix_image examples/data/fractal.JPG;
#X obj 223 55 inlet;
#X msg 223 123 open \$1;
#X obj 223 100 openpanel;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X restore 451 138 pd image;
#X text 17 295 Outlet 1: gemlist;
#X text 23 212 Inlet 1: gemlist;
#X text 503 88 (JPEG \, TIFF \, ..);
#X obj 541 122 gemhead;
#N canvas 0 0 587 366 image 0;
#X obj 77 48 inlet;
#X obj 77 344 outlet;
#X obj 77 205 pix_image examples/data/dancer.JPG;
#X obj 223 55 inlet;
#X msg 223 123 open \$1;
#X obj 223 100 openpanel;
#X obj 77 281 pix_buf;
#X msg 103 257 auto 1;
#X obj 103 236 loadbang;
#X text 156 263 [pix_buf] with auto 1 is important if we want to recalculate our pix-effect each frame but don't want to reload the image all the time.;
#X connect 0 0 2 0;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X connect 6 0 1 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X restore 541 141 pd image;
#X obj 586 104 bng 15 250 50 0 empty empty pix_load -45 8 0 8 #fcfcfc #000000 #000000;
#X text 23 227 Inlet 2: gemlist;
#X text 449 77 open two different images;
#X text 50 12 Synopsis: [pix_mix];
#X obj 476 177 hsl 128 15 0 1 0 1 empty empty empty -2 -6 0 8 #fcfcfc #000000 #000000 6300 1;
#X floatatom 473 202 5 0 0 0 - - - 0;
#X msg 530 201 0.7 0.7;
#X text 29 67 Description: mix 2 images based on mixing factors;
#X text 23 241 Inlet 3: list: weights for left/right image;
#X text 63 166 list: [leftGain [rightGain]] (defaults: 0.5 0.5);
#X obj 451 229 pix_mix 0;
#X text 14 81 [pix_mix] will mix 2 images just like a video-mixer. You can supply mixing factors A and B \, and the result will be out=in1*A+in2*B. If you supply only one factor A \, the result will be out=in1*(1-A)+in2*A.;
#X text 22 255 Inlet 3: float: weight for left image. right weight will be the reciprocal value (for crossfading);
#N canvas 484 243 450 300 META 0;
#X obj 10 25 declare -lib Gem;
#X text 10 45 DESCRIPTION mix 2 images based on mixing factors;
#X text 10 65 KEYWORDS Gem pix image;
#X text 20 85 INLET_0 gemlist;
#X text 20 105 INLET_1 gemlist;
#X text 20 125 INLET_2 list float;
#X text 20 145 OUTLET_0 gemlist;
#X text 10 165 AUTHOR IOhannes m zm√∂lnig;
#X text 10 185 LICENSE GPL v2;
#X restore 518 8 pd META;
#X obj 521 296 _gemwin;
#X obj 451 267 _pix2rectangle 3;
#X connect 11 0 14 0;
#X connect 13 0 14 1;
#X connect 14 0 30 0;
#X connect 18 0 19 0;
#X connect 19 0 30 1;
#X connect 20 0 19 1;
#X connect 24 0 25 0;
#X connect 25 0 30 2;
#X connect 26 0 30 2;
#X connect 30 0 35 0;
