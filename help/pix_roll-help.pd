#N canvas 6 61 651 355 10;
#X declare -lib Gem;
#X text 452 8 GEM object;
#X obj 8 216 cnv 15 430 125 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 39 218 Inlets:;
#X text 39 310 Outlets:;
#X obj 8 176 cnv 15 430 30 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 17 175 Arguments:;
#X obj 8 76 cnv 15 430 90 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 449 77 cnv 15 170 250 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X text 453 60 Example:;
#X obj 514 254 cnv 15 100 60 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X obj 450 140 cnv 15 160 80 empty empty empty 20 12 0 14 #14e814 #404040 0;
#X obj 451 84 gemhead;
#X text 71 31 Class: pix object;
#X text 63 186 <none>;
#X text 57 323 Outlet 1: gemlist;
#X text 33 232 Inlet 1: gemlist;
#X floatatom 530 175 5 0 0 2 roll - - 0;
#X obj 451 196 pix_roll;
#X msg 459 168 axis \$1;
#X obj 459 147 tgl 15 0 empty empty empty 0 -6 0 8 #fcfcfc #000000 #000000 0 1;
#X text 50 12 Synopsis: [pix_roll];
#X text 12 90 [pix_roll] will roll/scroll an image (wrap around the left/right vs. upper/lower edge);
#X text 33 278 Inlet 2: int: (sc)roll number of pixels;
#X text 29 77 Description: (sc)roll through an image;
#X text 33 245 Inlet 1: message: axis [0|1] scroll(0=default) or roll(1);
#X text 13 116 [pix_roll] gives an effect similar to vertical and horizontal hold on a television. the offset is user defined and can be incremented using a counter object for a looping roll effect.;
#N canvas 484 243 450 300 META 0;
#X obj 10 25 declare -lib Gem;
#X text 10 45 DESCRIPTION (sc)roll through an image;
#X text 10 65 KEYWORDS Gem pix image;
#X text 20 85 INLET_0 gemlist axis;
#X text 20 105 INLET_1 int;
#X text 20 125 OUTLET_0 gemlist;
#X text 10 145 AUTHOR IOhannes m zm√∂lnig;
#X text 10 165 LICENSE GPL v2;
#X restore 518 8 pd META;
#X obj 519 260 _gemwin;
#X obj 451 233 _pix2rectangle 3;
#X obj 451 113 pix_test;
#X connect 11 0 29 0;
#X connect 16 0 17 1;
#X connect 17 0 28 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 29 0 17 0;
