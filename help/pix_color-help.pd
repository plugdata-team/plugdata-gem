#N canvas 6 61 630 343 10;
#X declare -lib Gem;
#X text 452 8 GEM object;
#X obj 8 245 cnv 15 430 80 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X text 39 248 Inlets:;
#X text 38 295 Outlets:;
#X obj 8 206 cnv 15 430 30 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X text 17 205 Arguments:;
#X obj 7 76 cnv 15 430 125 empty empty empty 20 12 0 14 #e0e0e0 #404040 0;
#X obj 449 77 cnv 15 170 250 empty empty empty 20 12 0 14 #dce4fc #404040 0;
#X text 453 60 Example:;
#X obj 514 254 cnv 15 100 60 empty empty empty 20 12 0 14 #bcbcbc #404040 0;
#X obj 450 158 cnv 15 160 60 empty empty empty 20 12 0 14 #14e814 #404040 0;
#X obj 451 84 gemhead;
#X text 71 31 Class: pix object;
#X text 63 216 <none>;
#X text 56 308 Outlet 1: gemlist;
#X text 63 262 Inlet 1: gemlist;
#X text 50 12 Synopsis: [pix_color];
#X text 29 76 Description: set the colour-channels of an image;
#X msg 527 165 0 0.5 0.8;
#X obj 451 196 pix_color;
#X msg 458 164 1 0 0 1;
#X text 42 95 [pix_color] sets each pixel of an image to a certain RGBA-value. As this is a pix_fx \, you will need an image first \, to set its pixels to a certain value.;
#X text 63 275 Inlet 2: list: 3 (RGB) or 4 (RGBA) values;
#N canvas 484 243 450 300 META 0;
#X obj 10 25 declare -lib Gem;
#X text 10 45 DESCRIPTION set the colour-channels of an image;
#X text 10 65 KEYWORDS Gem pix image;
#X text 20 85 INLET_0 gemlist;
#X text 20 105 INLET_1 list;
#X text 20 125 OUTLET_0 gemlist;
#X text 10 145 AUTHOR IOhannes m zm√∂lnig;
#X text 10 165 LICENSE GPL v2;
#X restore 518 8 pd META;
#X obj 524 259 _gemwin;
#X obj 451 113 pix_test;
#X text 29 133 Note that this is done by the CPU in the main-memory of your machine \, while [color] can be done very fast by your graphics-card. Generally it is NOT a good idea to use [pix_color] if the same result can be achieved with the [color] object !;
#X obj 451 233 _pix2rectangle 3;
#X connect 11 0 25 0;
#X connect 18 0 19 1;
#X connect 19 0 27 0;
#X connect 20 0 19 1;
#X connect 25 0 19 0;
